{"version":3,"sources":["redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","redux/contacts/contacts-selectors.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","routes.js","components/UserMenu/Navigation.js","image/icons-user-no-avatar.png","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["initialUserState","name","email","user","createReducer","registerSuccess","_","payload","loginSuccess","logoutSuccess","__","getCurrentUserSuccess","token","setError","error","registerError","loginError","logoutError","getCurrentUserError","isLogedIn","combineReducers","getIsAuthenticated","state","auth","getUserEmail","getItems","contacts","items","getFilterValue","filter","getLoadingItems","loading","getFilteredContactList","createSelector","normalizedFilter","toLowerCase","includes","sort","a","b","localeCompare","axios","defaults","baseURL","headers","common","Authorization","signup","credentials","dispatch","registerRequest","post","response","data","message","login","loginRequest","logout","logoutRequest","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","createAction","fetchContactSuccess","addContactSuccess","deleteContactSuccess","item","id","changeFilter","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","fetchContacts","addContact","number","contact","then","catch","deleteContact","contactID","delete","Navigation","className","exact","to","routes","activeClassName","mapDispatchToProps","onLogout","connect","avatar","noAvatar","src","alt","width","type","onClick","AuthNav","isAuthenticated","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","ContactsView","loginView","RegisterView","App","this","onGetCurrentUser","fallback","path","isLoading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","blacklist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee45a136.chunk.js","sourcesContent":["  \nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  /* registerRequest, */\n  registerSuccess,\n  registerError,\n  /* loginRequest, */\n  loginSuccess,\n  loginError,\n  /* logoutRequest, */\n  logoutSuccess,\n  logoutError,\n  /* getCurrentUserRequest, */\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = {\n    name: null,\n    email: null\n};\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: (_, __) => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nconst isLogedIn = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [logoutError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isLogedIn,\n  token,\n  error,\n});","export const getIsAuthenticated = state => !!state.auth.isLogedIn;\n\nexport const getUserEmail = state => state.auth.user.email;\n\nexport const getError = state => state.auth.user.error;","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\n\nexport const getFilterValue = state => state.contacts.filter;\n\nexport const getLoadingItems = state => state.contacts.loading;\n\nexport const getFilteredContactList = createSelector(\n  [getItems, getFilterValue],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts\n      .filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  },\n);\n","import axios from 'axios';\n\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const signup = credentials => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nexport const login = credentials => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nexport const logout = () => async dispatch => {\n  dispatch(logoutRequest());\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(item => item.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n\n","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,    \n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n/* axios.defaults.baseURL = 'http://localhost:3001'; */\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest);\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n\nexport const addContact = ({ name, number }) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nexport const deleteContact = contactID => dispatch => {\n  dispatch(deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactID}`)\n    .then(() => dispatch(deleteContactSuccess(contactID)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');","export default {\n  home: '/',\n  contacts: '/contacts',\n  login: '/login',\n  register: '/register',\n};","import { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport './UserMenu.css'\n\nconst Navigation = () => {\n    return (\n        <ul className=\"navigation\">\n            <li> <NavLink\n                exact to={routes.home}\n                className=\"NavLink\"\n                activeClassName=\"NavLink--active\">\n                Home</NavLink>\n            </li>\n            \n            <li> <NavLink\n                to={routes.contacts}\n                className=\"NavLink\"\n                activeClassName=\"NavLink--active\">\n                Contacts</NavLink>\n            </li>\n\n        </ul>\n    );   \n}\n \nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/icons-user-no-avatar.6c53c0a1.png\";","import './UserMenu.css'\nimport React from 'react';\nimport { getUserEmail, logout } from '../../redux/auth';\nimport { connect } from 'react-redux';\nimport noAvatar from '../../image/icons-user-no-avatar.png';\n\n\nconst UserMenu = ({ email, onLogout, avatar }) => (\n    <div className=\"UserMenu\">        \n        <img src={avatar} alt=\"\" width=\"30\" />   \n        <span>{email}</span>\n        <button type=\"button\" onClick={onLogout} className=\"btn\">Sign out</button>\n    </div>\n)\n\nconst mapStateToProps = state => ({\n  email: getUserEmail(state),\n  avatar: noAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport './UserMenu.css'\n\nconst AuthNav = () => {\n    return (\n        <ul className=\"navigation\">\n            <li> <NavLink\n                to={routes.login}\n                className=\"NavLink\"\n                activeClassName=\"NavLink--active\">\n                  <span >\n                    Login\n                  </span>\n                </NavLink>\n            </li>\n\n            <li> <NavLink\n                to={routes.register}\n                className=\"NavLink\"\n                activeClassName=\"NavLink--active\">\n                  <span >\n                    Register\n                  </span>\n                </NavLink>\n            </li>   \n        </ul>\n    );   \n}\n \nexport default AuthNav;","import { connect } from 'react-redux';\n\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\n\nimport { getIsAuthenticated } from '../../redux/auth';\n\nimport './UserMenu.css';\n\n\n\n\nconst AppBar = ({isAuthenticated}) => {\n    return (\n        <header className=\"header\">\n            <Navigation />\n            {isAuthenticated? <UserMenu />:<AuthNav />}\n        </header>\n    );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n \nexport default connect(mapStateToProps)(AppBar);","import { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import { connect } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import React, { lazy, Suspense, Component} from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport routes from './routes';\nimport { connect } from 'react-redux';\n\nimport AppBar from './components/UserMenu';\n\nimport { getCurrentUser } from './redux/auth/auth-operations';\n/* import { fetchContacts } from './redux/contacts/contacts-operations'; */\nimport { getItems, getLoadingItems } from './redux/contacts/contacts-selectors';\n\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components//PublicRoute/PublicRoute';\n\nimport './app.css'\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"home-view\" */)\n);\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-view\" */)\n);\n\nconst loginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"login-view\" */)\n);\n\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"register-view\" */)\n);\n\n\nclass App extends Component {\n    componentDidMount() {\n    this.props.onGetCurrentUser();\n    /* this.props.fetchItems(); */\n  }\n\n  render() { \n    return (\n      <div  className=\"app\">\n        <AppBar />\n        <Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <PublicRoute exact path={routes.home} component={HomeView} />\n            <PrivateRoute\n              path={routes.contacts}\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo=\"/contacts\"\n              component={loginView}\n            />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo=\"/\"\n              component={RegisterView}\n            />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  items: getItems(state),\n  isLoading: getLoadingItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  /* fetchItems: () => dispatch(fetchContacts()), */\n  onGetCurrentUser: () => dispatch(getCurrentUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts';\nimport authReducer from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n  blacklist: ['filter'],\n};\n\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}